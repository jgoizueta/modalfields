either add a generator to clone the rake tasks when used from a gem or look for another solution (make it an engine?)

type synonyms (timestamp, datetime)

process specifiers (to add validations for required, etc.)(detect index modifications) decide what to do with multiple-column indices

refactor into multiple files

add extensible specifiers:
  ModalFields.specify do
    required do |model, column|
       model.validates_presence_of column.name
    end
    unique do |model, column|
      model.validates_uniqueness_of name, :allow_nil => !column.specifiers.include?(:required)
    end
  end

rename hook to... filter? process? declared?  transformation?

complete field declaration validation

helper methods for field declaration: (can be used instead of the type and dispense with the need
of extra attributes)
  status enum_field(:draft, :approved, :published), :required
instead of
  status :enum_field, :required, :values=>[:draft, :approved, :published]

Installation:
  Rails 2
  script/plugin install git://github.com/jgoizueta/modalfields.git
  Rails 3
  rails plugin install git://github.com/jgoizueta/modalfields.git
  
  # load rake tasks
  if File.exists?('Rakefile')
    load 'Rakefile'
    Dir[File.join(File.dirname(__FILE__), '../tasks', '**/*.rake')].each { |rake| load rake }
    return true
  else
    return false
  end

